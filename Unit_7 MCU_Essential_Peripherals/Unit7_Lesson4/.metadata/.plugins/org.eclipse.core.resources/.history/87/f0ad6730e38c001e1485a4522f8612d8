/*
 * Stm32_F103C6_EXTI_driver.h
 *
 *  Created on: November 25, 2023
 *      Author: Herp
 */

#ifndef STM32_F103C6_EXTI_DRIVER_H_
#define STM32_F103C6_EXTI_DRIVER_H_

/************************************_Includes************************************/
#include "Stm32_F103C6_EXTI_driver.h"







/*
 *======================================================================================
 * 								Generic Variable
 *======================================================================================
 */

	void(* GP_IRQ_CallBack[15])(void) ;

/*
 *======================================================================================
 * 								Generic Macros
 *======================================================================================
 */

#define AFIO_GPIO_EXTI_MAPPING(x)	(	(x==GPIOA)?0:\
										(x==GPIOB)?1:\
										(x==GPIOC)?2:\
										(x==GPIOD)?3:0 )

/*
 *======================================================================================
 * 								Generic Functions
 *======================================================================================
 */
void Update_EXTI(EXTI_PinConfig_t* EXTI_Config)
{
	//1- Configure GPIO to be AF Input -> Floating INPUT
	GPIO_PinConfig_t PinCfg ;
	//Update the GPIO Pin To Be Floating Input
	PinCfg.GPIO_PinNumber = EXTI_Config->EXTI_PIN.GPIO_PIN ;
	PinCfg.GPIO_MODE = GPIO_MODE_INPUT_FLO ;
	MCAL_GPIO_Init(EXTI_Config->EXTI_PIN.GPIO_Port , &PinCfg);
	//==============================================

	//2- UPDATE AFIO to Route between EXTI Line PORT A,B,C,D

	uint8_t AFIO_EXTICR_index = EXTI_Config->EXTI_PIN.EXTI_InputLineNumber / 4 ;

	uint8_t AFIO_EXTICR_Position = (EXTI_Config->EXTI_PIN.EXTI_InputLineNumber % 4) * 4 ;

	//clear the four bits first
	AFIO->EXTICR[AFIO_EXTICR_index] &= ~(0xF <<AFIO_EXTICR_Position);

	AFIO->EXTICR[AFIO_EXTICR_index] |= ((AFIO_GPIO_EXTI_MAPPING(EXTI_Config->EXTI_PIN.GPIO_Port) & 0xF) << AFIO_EXTICR_Position ) ;
	//==============================================

	//3- Update Rising or falling Register
	EXTI->RTSR &= ~(1 << EXTI_Config->EXTI_PIN.EXTI_InputLineNumber);
	EXTI->FTSR &= ~(1 << EXTI_Config->EXTI_PIN.EXTI_InputLineNumber);

	if(EXTI_Config->Trigger_Case == EXTI_Trigger_RISING)
	{
		EXTI->RTSR |= (1 << EXTI_Config->EXTI_PIN.EXTI_InputLineNumber);
	}
	else if(EXTI_Config->Trigger_Case == EXTI_Trigger_FALLING)
	{
		EXTI->FTSR |= (1 << EXTI_Config->EXTI_PIN.EXTI_InputLineNumber);
	}
	else if(EXTI_Config->Trigger_Case == EXTI_Trigger_RISINGAndFALLING)
	{
		EXTI->RTSR |= (1 << EXTI_Config->EXTI_PIN.EXTI_InputLineNumber);
		EXTI->FTSR |= (1 << EXTI_Config->EXTI_PIN.EXTI_InputLineNumber);
	}
	//==============================================
	//4- Update IRQ Handling CALLBACK

	GP_IRQ_CallBack[EXTI_Config->EXTI_PIN.EXTI_InputLineNumber] = EXTI_Config->P_IRQ_CallBack ;

	//==============================================
	//5- Enable/Disable IRQ
}




/*
 *======================================================================================
 * 								APIs Functions Definitions
 *======================================================================================
 */


/**===========================================================
 * @Fn				-MCAL_GPIO_Init
 * @brief 			-Used to Initialize EXTI from Specifies GPIO PIN and specify  the MASK/Trigger condition and IRQ CallBack
 * @param [in]		-EXTI_Config set by @ref EXTI_define, EXTI_Trigger_define and EXTI_IRQ_define
 * @retval			-none
 * Note				-Stm32F103C6 MCU has GPIO A,B,C,D,E,F Modules
 * 					But LQFP48 Package has only GPIO A,B,PART of C/D exported as external PINS from the MCU
 * 					E,F DOESN'T EXIST IN THIS PACKAGE!
 * 					- Also Mandatory to Enable RCC Clock for AFIO and the corresponding GPIO
 */
void MCAL_EXTI_GPIO_Init(EXTI_PinConfig_t* EXTI_Config)
{
	Update_EXTI(EXTI_Config);

}




/**===========================================================
 * @Fn				-MCAL_EXTI_GPIO_Update
 * @brief 			-Used to Initialize EXTI from Specifies GPIO PIN and specify  the MASK/Trigger condition and IRQ CallBack
 * @param [in]		-EXTI_Config set by @ref EXTI_define, EXTI_Trigger_define and EXTI_IRQ_define
 * @retval			-none
 * Note				-Stm32F103C6 MCU has GPIO A,B,C,D,E,F Modules
 * 					But LQFP48 Package has only GPIO A,B,PART of C/D exported as external PINS from the MCU
 * 					E,F DOESN'T EXIST IN THIS PACKAGE!
 * 					- Also Mandatory to Enable RCC Clock for AFIO and the corresponding GPIO
 */
void MCAL_EXTI_GPIO_Update(EXTI_PinConfig_t* EXTI_Config)
{
	Update_EXTI(EXTI_Config);
}



/**===========================================================
 * @Fn				-MCAL_GPIO_DeInit
 * @brief 			-reset EXTI Registers and NVI corresponding IRQ MASK
 * @retval			-none
 * Note				-None
 *
 *
 */
void MCAL_EXTI_GPIO_DeInit(void)
{
	EXTI->IMR = 0x00000000;
	EXTI->EMR = 0x00000000;
	EXTI->RTSR = 0x00000000;
	EXTI->FTSR = 0x00000000;
	EXTI->SWIER = 0x00000000;
	EXTI->PR = 0xFFFFFFFF; //rc_w1 cleared by writing '1'

	//Disable EXTI IRQ From NVIC
	NVIC_IRQ6_EXTI0_Disable		;
	NVIC_IRQ7_EXTI1_Disable     ;
	NVIC_IRQ8_EXTI2_Disable     ;
	NVIC_IRQ9_EXTI3_Disable     ;
	NVIC_IRQ10_EXTI4_Disable    ;
	NVIC_IRQ23_EXTI5_9_Disable  ;
	NVIC_IRQ8_EXTI10_15_Disable ;


}


///**========================================================
///**========================================================
///**==============       ISR Functions              ========
///**========================================================
// */

#endif /* STM32_F103C6_EXTI_DRIVER_H_ */
